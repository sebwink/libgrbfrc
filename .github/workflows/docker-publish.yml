name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: libgrbfrc
  GUROBI_VERSIONS: 8.1.1 9.0.2

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            for grbver in $GUROBI_VERSIONS; do
              echo "Test build for Gurobi $grbver"
              docker build . --build-arg GUROBI_VERSION=$grbver --file Dockerfile
            done
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: | 
          for grbver in $GUROBI_VERSIONS; do
            echo "Test build for Gurobi $grbver"
            docker build . --build-arg GUROBI_VERSION=$grbver \
              --file Dockerfile \
              --tag $IMAGE_NAME-grb$grbver
            done

      - name: Log into registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login docker.io -u sebwink --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          
          echo VERSION=$VERSION
          
          for grbver in $GUROBI_VERSIONS; do
            IMAGE_ID_GITHUB_PKG=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME-grb$grbver
            IMAGE_ID_DOCKER_IO=docker.io/sebwink/$IMAGE_NAME-grb$grbver

            # Change all uppercase to lowercase
            IMAGE_ID_GITHUB_PKG=$(echo $IMAGE_ID_GITHUB_PKG | tr '[A-Z]' '[a-z]')
            IMAGE_ID_DOCKER_IO=$(echo $IMAGE_ID_DOCKER_IO | tr '[A-Z]' '[a-z]')

            echo IMAGE_ID_GITHUB_PKG=$IMAGE_ID_GITHUB_PKG
            echo IMAGE_ID_DOCKER_IO=$IMAGE_ID_DOCKER_IO

            docker tag $IMAGE_NAME-grb$grbver $IMAGE_ID_GITHUB_PKG:$VERSION
            docker push $IMAGE_ID_GITHUB_PKG:$VERSION
            
            docker tag $IMAGE_NAME-grb$grbver $IMAGE_ID_DOCKER_IO:$VERSION
            docker push $IMAGE_ID_DOCKER_IO:$VERSION
            
          done
